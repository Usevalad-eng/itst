Все необходимые элементы находятся в index.html
https://developer.mozilla.org/ru/docs/Web/API/Element

1. Элемент: #first-element. 
- поменяйте "Я сосед" на "Я хороший сосед"
- добавить к каждому соседу его номер, например, "Я хороший сосед №2"
- оберните текст в элементах с классом "neighbor" в тег span
- замените теги span на тег b
- замените текст "Я хороший сосед" на "Я последний хороший сосед" у элемента с классом "fourth-neighbor"

2. Элемент: #second-element.
- добавить маркированный список из 10 элементов с текстом "Пункт 1", "Пункт 2" и т.д.
- каждый четный пункт покрасить в красный цвет
- каждому нечетному пункту добавить класс odd-element
- элементам кратным 3 с классом odd-element увеличить шрифт в 2 раза.

3. Элемент: #third-element.
- заменить теги b на strong
- удалить в тегах strong все теги, т.е. должен остаться только текст
- обернуть каждое слово в тег span 

4. Элемент: #fourth-element
- Выведите на экран текст из всех тегов div
- Поменяйте местами содержимое тегов div в обратном порядке, при этом теги остаются на месте, меняется только текст
- удалить третьего "соседа"
- добавить "пятого" соседа после четвертого
- пятому соседу добавить границу, внутренние отступы и фон

https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_document_getelementsbytagname3
https://www.w3schools.com/Jsref/jsref_touppercase.asp
https://metanit.com/web/html5/5.8.php
https://learn.javascript.ru/css-why
https://habr.com/ru/company/macloud/blog/557422/
https://developer.mozilla.org/ru/docs/Web/API/Node/childNodes

Node.childNodes
Доступный для чтения аттрибут Node.childNodes возвращает коллекцию дочерних элементов данного элемента.
Синтаксис
var ndList = elementNodeReference.childNodes;
ndList -- упорядоченная коллекция объектов элементов, которые являются детьми данного элемента. Если у элемента нет детей, ndList пуст.

ndList -- переменная, хранящая список дочерних элементов. Тип этого списка --  NodeList.

Пример
// parg -- ссылка на элемент <p>

if (parg.hasChildNodes()) {
  // Таким образом, сначала мы проверяем, не пуст ли объект, есть ли у него дети
  var children = parg.childNodes;

  for (var i = 0; i < children.length; ++i) {
    // сделать что-то с каждым внутренним элементом через children[i]
    // ПРИМЕЧАНИЕ: Список является ссылкой, Добавление или удаление дочерних элементов изменит список
  }
}
Copy to Clipboard
// Это один из способов удалить все дочерние элементы из элемента
// box -- ссылка на элемент с детьми

while (box.firstChild) {
    //Список является ссылкой, то есть он будет переиндексирован перед каждым вызовом
    box.removeChild(box.firstChild);
}
Copy to Clipboard
Примечания
Элементы в коллекции -- объекты, а не строки. Чтобы получить данные из этих объектов, вы должны использовать их свойства (например, elementNodeReference.childNodes[1].nodeName чтобы получить имя, и т. д.).

Объект document обладает 2-мя детьми: декларацией Doctype и корневым элементов, к которому как правило обращаются как documentElement. (В (X)HTML документах это HTML-элемент.)

childNodes также включают, например, текстовые узлы и комментарии. Чтобы пропустить их, используйте ParentNode.children (en-US) взамен.